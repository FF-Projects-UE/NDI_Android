<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<init>
		<log text="NDI_Android"/>
		<setBool result="bCpuArchSupported" value="false"/>
		<isArch arch="arm64-v8a">
			<setBool result="bCpuArchSupported" value="true"/>
		</isArch>
	</init>

	<androidManifestUpdates>
		<!-- Add permissions -->
		<addPermission android:name="android.permission.INTERNET" />
		<addPermission android:name="android.permission.ACCESS_WIFI_STATE" />
		<addPermission android:name="android.permission.CHANGE_WIFI_STATE" />
		<addPermission android:name="android.permission.CHANGE_WIFI_MULTICAST_STATE" />
	</androidManifestUpdates>

	<resourceCopies>
		<if condition="bCpuArchSupported">
			<true>
				<log text="Copying libndi.so"/>
				<copyFile src="$S(PluginDir)/ThirdParty/NDI/Android/lib/arm64-v8a/libndi.so"
							dst="$S(BuildDir)/libs/$S(Architecture)/libndi.so" />
			</true>
		</if>
	</resourceCopies>

	<gameActivityImportAdditions>
		<insert>
			import android.os.IBinder;
			import android.app.Service;
			import android.net.nsd.NsdManager;
			import android.net.nsd.NsdServiceInfo;
		</insert>
	</gameActivityImportAdditions>

	<gameActivityClassAdditions>
		<insert>
			public class NDI_NSD_Service
			{
			private NsdManager nsdManager;
			private NsdServiceInfo nsdServiceInfo;
			private NsdManager.RegistrationListener listener;

			public void registerService(String ServiceName)
			{
			this.nsdManager = (NsdManager)Get().getApplicationContext().getSystemService(Context.NSD_SERVICE);

			this.nsdServiceInfo = new NsdServiceInfo();
			this.nsdServiceInfo.setServiceName(ServiceName);
			this.nsdServiceInfo.setServiceType("_example._tcp");
			this.nsdServiceInfo.setPort(5960);

			this.nsdManager.registerService(this.nsdServiceInfo, NsdManager.PROTOCOL_DNS_SD, new NsdManager.RegistrationListener()
			{
			@Override
			public void onRegistrationFailed(NsdServiceInfo nsdServiceInfo, int i)
			{

			}

			@Override
			public void onUnregistrationFailed(NsdServiceInfo nsdServiceInfo, int i)
			{

			}

			@Override
			public void onServiceRegistered(NsdServiceInfo nsdServiceInfo)
			{

			}

			@Override
			public void onServiceUnregistered(NsdServiceInfo nsdServiceInfo)
			{

			}
			});
			}
			}
		</insert>
	</gameActivityClassAdditions>
	
	<!-- optional libraries to load in GameActivity.java before libUnreal.so -->
	<soLoadLibrary>
		<if condition="bCpuArchSupported">
			<true>
				<loadLibrary name="libndi" failmsg="libndi library not loaded and may be required for NDI_Android." />
			</true>
		</if>
	</soLoadLibrary>
</root>